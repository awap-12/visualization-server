const clusterConfig = require("server/config/service");
const fs = require("node:fs/promises");
const path = require("node:path");

const CLUSTER_ROOT = path.resolve(__dirname, "../cluster");

const sourceGenerator = name =>
`// This script is generated by bin/parse.js

const cluster = require("node:cluster");

module.exports = port => {
    const http = require("node:http");
    const app = require("${name}");

    const server = http.createServer(app);

    cluster.onEvent("clusterReady", () => {
        server.listen(port, () => {
            let addr = server.address();
            cluster.sendEvent("master:serverOnListen", { name: "${name}", addr });
        });
    });
};
`;

void async function () {
    try {
        const files = await fs.readdir(CLUSTER_ROOT);
        for (const file of files) {
            await fs.unlink(path.join(CLUSTER_ROOT, file));
        }
        for (const key in clusterConfig) {
            await fs.writeFile(path.format({
                dir: CLUSTER_ROOT,
                name: key,
                ext: "js"
            }), sourceGenerator(key));
        }
    } catch (err) {
        console.error(err);
    }
}();
